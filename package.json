{
  "name": "jsdoc-generator",
  "displayName": "JSDoc Generator",
  "description": "Automatic JSDoc generator for TypeScript and JavaScript.",
  "publisher": "crystal-spider",
  "icon": "jsdoc-generator.png",
  "version": "2.2.0",
  "engines": {
    "vscode": "^1.57.0"
  },
  "categories": [
    "Snippets",
    "Programming Languages"
  ],
  "activationEvents": [
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onLanguage:javascript",
    "onLanguage:javascriptreact"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "jsdoc-generator.generateJsdocWorkspace",
        "title": "Generate JSDoc for the workspace"
      },
      {
        "command": "jsdoc-generator.generateJsdocFolder",
        "title": "Generate JSDoc in Folder"
      },
      {
        "command": "jsdoc-generator.generateJsdocFile",
        "title": "Generate JSDoc for the current file"
      },
      {
        "command": "jsdoc-generator.generateJsdoc",
        "title": "Generate JSDoc"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "jsdoc-generator.generateJsdocFolder",
          "when": "explorerResourceIsFolder",
          "group": "2_workspace"
        },
        {
          "command": "jsdoc-generator.generateJsdocFile",
          "when": "!explorerResourceIsFolder && resourceLangId in ext.supportedLanguages",
          "group": "1_workspace"
        }
      ]
    },
    "configuration": {
      "title": "JSDoc Generator configuration",
      "properties": {
        "jsdoc-generator.descriptionPlaceholder": {
          "type": "string",
          "default": "Description placeholder",
          "description": "Set the description placeholder.\nEmpty to disable."
        },
        "jsdoc-generator.author": {
          "type": "string",
          "default": "",
          "description": "Set the value for the author tag.\nEmpty to disable, set to \"author\" to insert \"author\" as placeholder."
        },
        "jsdoc-generator.dateFormat": {
          "type": "string",
          "default": "",
          "description": "Fill in with any valid MomentJs format (either explicit or locale) to include the date tag.\nFormats can include time as well.\nLeave empty to disable."
        },
        "jsdoc-generator.emptyLineAfterHeader": {
          "type": "boolean",
          "default": "true",
          "description": "Whether to add an empty line after the header (description, date, author)."
        },
        "jsdoc-generator.singleLineComments": {
          "type": "boolean",
          "default": "false",
          "description": "Whether to prefer single line comments (/** ... */) whenever possible."
        },
        "jsdoc-generator.includeTypes": {
          "type": "boolean",
          "default": "true",
          "description": "Whether to include types into the generated JSDoc."
        },
        "jsdoc-generator.includeParenthesisForMultipleTypes": {
          "type": "boolean",
          "default": "true",
          "description": "When enabled, will include round brackets around union and intersection types.\nNote that round brackets will still be used if manually put in the type or for union and intersection types which are also optional or mandatory."
        },
        "jsdoc-generator.descriptionForConstructors": {
          "type": "string",
          "default": "Creates an instance of {Object}.",
          "description": "\"{Object}\" will be replaced with the class name.\nFor default exported classes without a name jsdoc-generator.descriptionPlaceholder will be used instead.\nEmpty to disable."
        },
        "jsdoc-generator.functionVariablesAsFunctions": {
          "type": "boolean",
          "default": "true",
          "description": "When enabled, will document variables with a function assigned as function declarations.\nDisable to document like properties."
        },
        "jsdoc-generator.includeExport": {
          "type": "boolean",
          "default": "true",
          "description": "Whether to include the export tag or not."
        },
        "jsdoc-generator.includeAsync": {
          "type": "boolean",
          "default": "true",
          "description": "Whether to include the async tag or not."
        },
        "jsdoc-generator.includeReturn": {
          "type": "boolean",
          "default": "true",
          "description": "Whether to include the return tag or not."
        },
        "jsdoc-generator.customTags": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tag": {
                "type": "string",
                "description": "Tag name"
              },
              "placeholder": {
                "type": "string",
                "description": "Placeholder text",
                "default": ""
              }
            }
          },
          "default": [],
          "description": "Set custom tags."
        },
        "jsdoc-generator.tagValueColumnStart": {
          "type": "integer",
          "default": 0,
          "description": "Starting point of the column containing the tag value (if any, e.g. type).\n0 to make it adaptive (default, no alignment), a positive number to fix the starting point.\nNote that if the tag previous values take over the specified starting point, the column will be shifted."
        },
        "jsdoc-generator.tagNameColumnStart": {
          "type": "integer",
          "default": 0,
          "description": "Starting point of the column containing the tag name value (if any, e.g. parameter name).\n0 to make it adaptive (default, no alignment), a positive number to fix the starting point.\nNote that if the tag previous values take over the specified starting point, the column will be shifted."
        },
        "jsdoc-generator.tagDescriptionColumnStart": {
          "type": "integer",
          "default": 0,
          "description": "Starting point of the column containing the tag description (if any, e.g. AI-generated).\n0 to make it adaptive (default, no alignment), a positive number to fix the starting point.\nNote that if the tag previous values take over the specified starting point, the column will be shifted."
        },
        "jsdoc-generator.generativeApiKey": {
          "type": "string",
          "default": "",
          "description": "Set your own API key for ChatGPT (see https://platform.openai.com/account/api-keys).\nIt's required only if you wish to use the automatic generation of descriptions.\nNote that jsdoc-generator.descriptionPlaceholder will take precedence."
        },
        "jsdoc-generator.generativeModel": {
          "type": "string",
          "enum": [
            "gpt-3.5-turbo",
            "gpt-4"
          ],
          "default": "gpt-3.5-turbo",
          "description": "Generative AI model to use to generate JSDoc decriptions.\nEnable the model with an API key.\nNote that jsdoc-generator.descriptionPlaceholder will take precedence."
        },
        "jsdoc-generator.generativeLanguage": {
          "type": "string",
          "enum": [
            "English",
            "Mandarin Chinese",
            "Spanish",
            "Hindi",
            "Portuguese",
            "Russian",
            "Japanese",
            "Yue Chinese",
            "Turkish",
            "Wu Chinese",
            "Korean",
            "French",
            "German",
            "Italian",
            "Arabic",
            "Greek"
          ],
          "default": "English",
          "description": "Language of the automatic generated descriptions.\nNote that all queries are in English, but the generative model will reply in the specified language."
        },
        "jsdoc-generator.generateDescriptionForTypeParameters": {
          "type": "boolean",
          "default": false,
          "description": "When using AI generation, generate descriptions for type parameters (generics) too.\nWhen enabled, makes JSDoc generation slower and use more API calls."
        },
        "jsdoc-generator.generateDescriptionForParameters": {
          "type": "boolean",
          "default": false,
          "description": "When using AI generation, generate descriptions for method parameters too.\nWhen enabled, makes JSDoc generation slower and use more API calls."
        },
        "jsdoc-generator.generateDescriptionForReturns": {
          "type": "boolean",
          "default": false,
          "description": "When using AI generation, generate descriptions for method return values too.\nWhen enabled, makes JSDoc generation slower and use more API calls."
        }
      }
    }
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Crystal-Spider/jsdoc-generator.git"
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check && npm run eslint:fix && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check && npm run eslint:fix && node esbuild.js --production",
    "compile-tests": "tsc -p .",
    "pretest": "npm run compile-tests && npm run compile",
    "test": "vscode-test",
    "check": "tsc --noEmit",
    "eslint:show": "eslint src",
    "eslint:fix": "eslint src --fix"
  },
  "devDependencies": {
    "@eslint/compat": "^1.2.4",
    "@types/mocha": "^10.0.10",
    "@types/node": "^20.11.0",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.19.0",
    "@typescript-eslint/parser": "^8.19.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.1",
    "esbuild": "^0.24.2",
    "eslint": "^9.17.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jsdoc": "^50.6.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "npm-run-all": "^4.1.5",
    "glob": "^11.0.0",
    "mocha": "^11.0.1",
    "moment": "^2.30.1",
    "openai": "^4.77.3",
    "palm-api": "^1.1.1",
    "typescript": "^5.7.2"
  }
}