{
	"name": "jsdoc-generator",
	"displayName": "JSDoc Generator",
	"description": "Automatic JSDoc generator. Works better with TypeScript, but can be helpful also with JavaScript.",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.57.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onLanguage:typescript",
		"onLanguage:javascript",
		"onCommand:jsdoc-generator.generateJsdocFiles"
	],
	"main": "./out/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "jsdoc-generator.generateJsdocFiles",
				"title": "Generate JSDoc for all JavaScript and TypeScript files."
			},
			{
				"command": "jsdoc-generator.generateJsdocFile",
				"title": "Generate JSDoc for the current files."
			},
			{
				"command": "jsdoc-generator.generateJsdoc",
				"title": "Generate JSDoc"
			}
		],
		"configuration": {
			"title": "JSDoc Generator configuration",
			"properties": {
				"jsdoc-generator.includeDescriptionPlaceholder": {
					"type": "boolean",
					"default": "true",
					"description": "When enabled, will include a description placeholder. The placeholder text can be specified with jsdoc-generator.descriptionPlaceholder"
				},
				"jsdoc-generator.descriptionPlaceholder": {
					"type": "string",
					"default": "Description placeholder",
					"description": "Set the description placeholder that will be included when jsdoc-generator.includeDescriptionPlaceholder is enabled."
				},
				"jsdoc-generator.includeAuthor": {
					"type": "boolean",
					"default": "false",
					"description": "When enabled, will include the author tag."
				},
				"jsdoc-generator.author": {
					"type": "string",
					"default": "Insert author",
					"description": "Set the value for the author tag that will be included when jsdoc-generator.includeAuthor is enabled."
				},
				"jsdoc-generator.includeDate": {
					"type": "boolean",
					"default": "false",
					"description": "When enabled, will include the date tag."
				},
				"jsdoc-generator.includeParenthesisForMultipleTypes": {
					"type": "boolean",
					"default": "true",
					"description": "When enabled, will put round brackets around union and intersection types. Note that round brackets will still be used for union and intersection types if they are also optional or mandatory."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run eslint:fix",
		"test": "node ./out/test/runTest.js",
		"eslint:show": "npx eslint . --ext .js,.ts",
		"eslint:fix": "npx eslint . --ext .js,.ts --fix"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.2",
		"@types/node": "14.x",
		"@types/vscode": "^1.57.0",
		"@typescript-eslint/eslint-plugin": "^4.28.1",
		"@typescript-eslint/parser": "^4.28.1",
		"eslint": "^7.30.0",
		"eslint-plugin-import": "^2.23.4",
		"eslint-plugin-jsdoc": "^35.4.1",
		"eslint-plugin-unused-imports": "^1.1.2",
		"glob": "^7.1.7",
		"mocha": "^8.4.0",
		"typescript": "^4.3.5",
		"vscode-test": "^1.5.2"
	}
}